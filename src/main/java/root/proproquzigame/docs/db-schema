create database quiz_db

create table main_category (
	main_category_id serial primary key,
	main_category_name text not null
)

create table sub_category (
    sub_category_id serial primary key,
    sub_category_name text not null,
    main_category_id int not null,
    foreign key (main_category_id) references main_category (main_category_id)
)

CREATE TYPE difficulty AS ENUM ('easy', 'medium', 'hard');

CREATE CAST (varchar AS difficulty) WITH INOUT AS IMPLICIT;

create table question (
	question_id serial primary key,
	question_text text not null,
	question_image bytea,
	difficulty difficulty not null,
	choice1 text not null,
	choice2 text not null,
	choice3 text not null,
	choice4 text not null,
	correct_answer int not null,
	explanation_text text not null,
	explanation_image bytea,
	sub_category_id int not null,
	foreign key (sub_category_id) references sub_category (sub_category_id)
)

insert into sub_category (sub_category_name, main_category_id)
values
('基礎', 1),
('ソート', 1),
('探索', 1),
('順次', 2),
('選択', 2),
('繰り返し', 2),
('変換', 3),
('基数の演算', 3),
('シフト', 3),
('プライバシー', 4),
('権利', 4),
('ウイルス', 4),
('配列', 5),
('スタック', 5),
('キュー', 5),
('リスト', 5),
('木構造', 5),
('基本形', 6),
('ベン図', 6),
('シフト', 6),
('日常の確率', 7),
('期待値', 7)

CREATE VIEW question_detail_view AS
SELECT
MC.main_category_id,
MC.main_category_name,
SC.sub_category_id, SC.sub_category_name,
Q.question_id,
Q.question_text,
Q.question_image,
Q.difficulty,
Q.choice1,
Q.choice2,
Q.choice3,
Q.choice4,
Q.correct_answer,
Q.explanation_text,
Q.explanation_image
FROM
main_category MC
join sub_category SC on MC.main_category_id = SC.main_category_id
join question Q on SC.sub_category_id = Q.sub_category_id

create table users (
	user_id serial primary key,
	username text not null,
	password text not null,
	age int not null,
	last_logged_in timestamp default CURRENT_TIMESTAMP
)

create table user_answer (
	id serial primary key,
	user_id int,
	question_id int,
	is_correct boolean not null,
	answered_time timestamp default CURRENT_TIMESTAMP,
	foreign key (user_id) references users(user_id),
	foreign key (question_id) references question(question_id)
)

//querying the list of unanswered questions
select question_id, sub_category_id, question_text
from question
where question_id not in
(
	select question_id from user_answer
)
and sub_category_id = 1